// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Header correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    logout={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(AppBar)
        position="static"
      >
        <WithStyles(Toolbar)>
          <WithStyles(Typography)
            className="header__typo"
            color="inherit"
            variant="headline"
          >
            <Link
              className="header__link"
              replace={false}
              to="/todos"
            >
              Starter
            </Link>
          </WithStyles(Typography)>
          <WithStyles(IconButton)
            aria-haspopup="true"
            color="inherit"
            onClick={[Function]}
          >
            <pure(AccountCircleIcon) />
          </WithStyles(IconButton)>
          <WithStyles(Menu)
            anchorEl={null}
            id="simple-menu"
            onClose={[Function]}
            open={false}
          >
            <WithStyles(MenuItem)
              className="header__anchor"
              component={[Function]}
              to="/todos"
            >
              Todos
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              className="header__anchor"
              component={[Function]}
              to="/my-account"
            >
              My account
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              className="header__anchor"
              onClick={[Function]}
            >
              Logout
            </WithStyles(MenuItem)>
          </WithStyles(Menu)>
        </WithStyles(Toolbar)>
      </WithStyles(AppBar)>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Toolbar)>
          <WithStyles(Typography)
            className="header__typo"
            color="inherit"
            variant="headline"
          >
            <Link
              className="header__link"
              replace={false}
              to="/todos"
            >
              Starter
            </Link>
          </WithStyles(Typography)>
          <WithStyles(IconButton)
            aria-haspopup="true"
            color="inherit"
            onClick={[Function]}
          >
            <pure(AccountCircleIcon) />
          </WithStyles(IconButton)>
          <WithStyles(Menu)
            anchorEl={null}
            id="simple-menu"
            onClose={[Function]}
            open={false}
          >
            <WithStyles(MenuItem)
              className="header__anchor"
              component={[Function]}
              to="/todos"
            >
              Todos
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              className="header__anchor"
              component={[Function]}
              to="/my-account"
            >
              My account
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              className="header__anchor"
              onClick={[Function]}
            >
              Logout
            </WithStyles(MenuItem)>
          </WithStyles(Menu)>
        </WithStyles(Toolbar)>,
        "position": "static",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="header__typo"
              color="inherit"
              variant="headline"
            >
              <Link
                className="header__link"
                replace={false}
                to="/todos"
              >
                Starter
              </Link>
            </WithStyles(Typography)>,
            <WithStyles(IconButton)
              aria-haspopup="true"
              color="inherit"
              onClick={[Function]}
            >
              <pure(AccountCircleIcon) />
            </WithStyles(IconButton)>,
            <WithStyles(Menu)
              anchorEl={null}
              id="simple-menu"
              onClose={[Function]}
              open={false}
            >
              <WithStyles(MenuItem)
                className="header__anchor"
                component={[Function]}
                to="/todos"
              >
                Todos
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                className="header__anchor"
                component={[Function]}
                to="/my-account"
              >
                My account
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                className="header__anchor"
                onClick={[Function]}
              >
                Logout
              </WithStyles(MenuItem)>
            </WithStyles(Menu)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Link
                className="header__link"
                replace={false}
                to="/todos"
              >
                Starter
              </Link>,
              "className": "header__typo",
              "color": "inherit",
              "variant": "headline",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Starter",
                "className": "header__link",
                "replace": false,
                "to": "/todos",
              },
              "ref": null,
              "rendered": "Starter",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "aria-haspopup": "true",
              "aria-owns": undefined,
              "children": <pure(AccountCircleIcon) />,
              "color": "inherit",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "anchorEl": null,
              "children": Array [
                <WithStyles(MenuItem)
                  className="header__anchor"
                  component={[Function]}
                  to="/todos"
                >
                  Todos
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  className="header__anchor"
                  component={[Function]}
                  to="/my-account"
                >
                  My account
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  className="header__anchor"
                  onClick={[Function]}
                >
                  Logout
                </WithStyles(MenuItem)>,
              ],
              "id": "simple-menu",
              "onClose": [Function],
              "open": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Todos",
                  "className": "header__anchor",
                  "component": [Function],
                  "to": "/todos",
                },
                "ref": null,
                "rendered": "Todos",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "My account",
                  "className": "header__anchor",
                  "component": [Function],
                  "to": "/my-account",
                },
                "ref": null,
                "rendered": "My account",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Logout",
                  "className": "header__anchor",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Logout",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(AppBar)
          position="static"
        >
          <WithStyles(Toolbar)>
            <WithStyles(Typography)
              className="header__typo"
              color="inherit"
              variant="headline"
            >
              <Link
                className="header__link"
                replace={false}
                to="/todos"
              >
                Starter
              </Link>
            </WithStyles(Typography)>
            <WithStyles(IconButton)
              aria-haspopup="true"
              color="inherit"
              onClick={[Function]}
            >
              <pure(AccountCircleIcon) />
            </WithStyles(IconButton)>
            <WithStyles(Menu)
              anchorEl={null}
              id="simple-menu"
              onClose={[Function]}
              open={false}
            >
              <WithStyles(MenuItem)
                className="header__anchor"
                component={[Function]}
                to="/todos"
              >
                Todos
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                className="header__anchor"
                component={[Function]}
                to="/my-account"
              >
                My account
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                className="header__anchor"
                onClick={[Function]}
              >
                Logout
              </WithStyles(MenuItem)>
            </WithStyles(Menu)>
          </WithStyles(Toolbar)>
        </WithStyles(AppBar)>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Toolbar)>
            <WithStyles(Typography)
              className="header__typo"
              color="inherit"
              variant="headline"
            >
              <Link
                className="header__link"
                replace={false}
                to="/todos"
              >
                Starter
              </Link>
            </WithStyles(Typography)>
            <WithStyles(IconButton)
              aria-haspopup="true"
              color="inherit"
              onClick={[Function]}
            >
              <pure(AccountCircleIcon) />
            </WithStyles(IconButton)>
            <WithStyles(Menu)
              anchorEl={null}
              id="simple-menu"
              onClose={[Function]}
              open={false}
            >
              <WithStyles(MenuItem)
                className="header__anchor"
                component={[Function]}
                to="/todos"
              >
                Todos
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                className="header__anchor"
                component={[Function]}
                to="/my-account"
              >
                My account
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                className="header__anchor"
                onClick={[Function]}
              >
                Logout
              </WithStyles(MenuItem)>
            </WithStyles(Menu)>
          </WithStyles(Toolbar)>,
          "position": "static",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="header__typo"
                color="inherit"
                variant="headline"
              >
                <Link
                  className="header__link"
                  replace={false}
                  to="/todos"
                >
                  Starter
                </Link>
              </WithStyles(Typography)>,
              <WithStyles(IconButton)
                aria-haspopup="true"
                color="inherit"
                onClick={[Function]}
              >
                <pure(AccountCircleIcon) />
              </WithStyles(IconButton)>,
              <WithStyles(Menu)
                anchorEl={null}
                id="simple-menu"
                onClose={[Function]}
                open={false}
              >
                <WithStyles(MenuItem)
                  className="header__anchor"
                  component={[Function]}
                  to="/todos"
                >
                  Todos
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  className="header__anchor"
                  component={[Function]}
                  to="/my-account"
                >
                  My account
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  className="header__anchor"
                  onClick={[Function]}
                >
                  Logout
                </WithStyles(MenuItem)>
              </WithStyles(Menu)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Link
                  className="header__link"
                  replace={false}
                  to="/todos"
                >
                  Starter
                </Link>,
                "className": "header__typo",
                "color": "inherit",
                "variant": "headline",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Starter",
                  "className": "header__link",
                  "replace": false,
                  "to": "/todos",
                },
                "ref": null,
                "rendered": "Starter",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "aria-haspopup": "true",
                "aria-owns": undefined,
                "children": <pure(AccountCircleIcon) />,
                "color": "inherit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "anchorEl": null,
                "children": Array [
                  <WithStyles(MenuItem)
                    className="header__anchor"
                    component={[Function]}
                    to="/todos"
                  >
                    Todos
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    className="header__anchor"
                    component={[Function]}
                    to="/my-account"
                  >
                    My account
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    className="header__anchor"
                    onClick={[Function]}
                  >
                    Logout
                  </WithStyles(MenuItem)>,
                ],
                "id": "simple-menu",
                "onClose": [Function],
                "open": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Todos",
                    "className": "header__anchor",
                    "component": [Function],
                    "to": "/todos",
                  },
                  "ref": null,
                  "rendered": "Todos",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "My account",
                    "className": "header__anchor",
                    "component": [Function],
                    "to": "/my-account",
                  },
                  "ref": null,
                  "rendered": "My account",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Logout",
                    "className": "header__anchor",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Logout",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
